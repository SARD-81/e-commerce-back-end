generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ---------- USER ----------
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      String    @default("USER")
  name      String

  addresses Address[]
  cart      CartItem[]
  orders    Order[]
  reviews   Review[]
  wishlist  Wishlist[]
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  revoked   Boolean  @default(false)
}

// ---------- ADDRESS ----------
model Address {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  street    String
  city      String
  country   String
  postal    String
  isDefault Boolean @default(false)
}

// ---------- CATEGORY ----------
model Category {
  id       Int      @id @default(autoincrement())
  name     String
  slug     String   @unique
  products Product[]
}

// ---------- PRODUCT ----------
model Product {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int    @default(0)

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  reviews   Review[]
  images    ProductImage[]
  cartItems CartItem[]
  wishlist  Wishlist[]
}

// ---------- PRODUCT IMAGE ----------
model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

// ---------- REVIEW ----------
model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ---------- CART ----------
model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

// ---------- ORDER ----------
model Order {
  id        Int      @id @default(autoincrement())
  total     Float
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

// ---------- WISHLIST ----------
model Wishlist {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}
